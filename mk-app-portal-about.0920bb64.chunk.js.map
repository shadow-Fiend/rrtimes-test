{"version":3,"sources":["webpack:///./apps/portal/apps/mk-app-portal-about/component.js","webpack:///./apps/portal/apps/mk-app-portal-about/action.js","webpack:///./apps/portal/apps/mk-app-portal-about/reducer.js"],"names":["_react","__webpack_require__","_mkMetaEngine","C","wrapper","appInfo","this","props","monkeyKing","_extends3","default","path","Component","option","metaAction","MetaAction","o","action","ret","config","metaHandlers","_this","_classCallCheck3","onInit","_ref","component","injections","reduce","current","metaReducer","MetaReducer","reducer","_data","init","state","getInitState"],"mappings":"gOAAAA,EAAAC,EAAA,GACAC,QAAAD,EAAA,UACAA,EAAA,8DAGqBE,GADpB,EAAAD,EAAAE,SAAQC,qNAGP,OAAOC,KAAKC,MAAMC,YAAX,EAAAC,EAAAC,YAA2BJ,KAAKC,OAAOI,KAAM,iBAFvBC,2BAAVT,4ICYN,SAAiBU,GAC5B,IAAMC,EAAa,IAAIC,SAAWF,GAC9BG,EAAI,IAAIC,GAAJ,EAAAR,EAAAC,YAAgBG,GAAQC,gBAC5BI,mBAAWJ,EAAeE,GAI9B,OAFAF,EAAWK,QAASC,aAAcF,IAE3BA,KAxBXjB,EAAA,QACAC,EAAAD,EAAA,SACAA,EAAA,8DAEMgB,EACF,SAAAA,EAAYJ,GAAQ,IAAAQ,EAAAf,MAAA,EAAAgB,EAAAZ,SAAAJ,KAAAW,GAAAX,KAKpBiB,OAAS,SAAAC,GAA+B,IAA5BC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,WACnBL,EAAKI,UAAYA,EACjBJ,EAAKK,WAAaA,EAClBA,EAAWC,OAAO,SAPlBrB,KAAKQ,WAAaD,EAAOC,WACzBR,KAAKa,OAASA,UAAOS,mJCSd,SAAiBf,GAC5B,IAAMgB,EAAc,IAAIC,UAAYjB,GAChCG,EAAI,IAAIe,GAAJ,EAAAtB,EAAAC,YAAiBG,GAAQgB,iBAEjC,SAAApB,EAAAC,YAAYmB,EAAgBb,IApBhCf,EAAA,QACAC,EAAAD,EAAA,SACAA,EAAA,OACA+B,EAAA/B,EAAA,6DAEM8B,EACF,SAAAA,EAAYlB,GAAQ,IAAAQ,EAAAf,MAAA,EAAAgB,EAAAZ,SAAAJ,KAAAyB,GAAAzB,KAKpB2B,KAAO,SAACC,EAAOrB,GACX,OAAOQ,EAAKQ,YAAYI,KAAKC,GAAO,EAAAF,EAAAG,kBALpC7B,KAAKuB,YAAchB,EAAOgB,YAC1BvB,KAAKa,OAASA,UAAOS","file":"mk-app-portal-about.0920bb64.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { wrapper } from 'mk-meta-engine'\nimport appInfo from './index'\n\n@wrapper(appInfo)\nexport default class C extends Component {\n\trender() {\n\t\treturn this.props.monkeyKing({ ...this.props, path: 'root' })\n\t}\n}","import React from 'react'\nimport { action as MetaAction, AppLoader } from 'mk-meta-engine'\nimport config from './config'\n\nclass action {\n    constructor(option) {\n        this.metaAction = option.metaAction\n        this.config = config.current\n    }\n\n    onInit = ({ component, injections }) => {\n        this.component = component\n        this.injections = injections\n        injections.reduce('init')\n    }\n}\n\nexport default function creator(option) {\n    const metaAction = new MetaAction(option),\n        o = new action({ ...option, metaAction }),\n        ret = { ...metaAction, ...o }\n\n    metaAction.config({ metaHandlers: ret })\n\n    return ret\n}","import { Map } from 'immutable'\nimport { reducer as MetaReducer } from 'mk-meta-engine'\nimport config from './config'\nimport { getInitState } from './data'\n\nclass reducer {\n    constructor(option) {\n        this.metaReducer = option.metaReducer\n        this.config = config.current\n    }\n\n    init = (state, option) => {\n        return this.metaReducer.init(state, getInitState())\n    }\n}\n\nexport default function creator(option) {\n    const metaReducer = new MetaReducer(option),\n        o = new reducer({ ...option, metaReducer })\n\n    return { ...metaReducer, ...o }\n}"],"sourceRoot":""}